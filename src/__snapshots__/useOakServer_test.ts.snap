export const snapshot = {};

snapshot[`useOakServer - fully decorated Controller 1`] = `
[
  {
    methods: [
      "HEAD",
      "GET",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [],
    path: "/test/foo",
    regexp: /^\\/test\\/foo[\\/#\\?]?\$/i,
  },
  {
    methods: [
      "POST",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [],
    path: "/test/bar",
    regexp: /^\\/test\\/bar[\\/#\\?]?\$/i,
  },
  {
    methods: [
      "HEAD",
      "GET",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [
      "zaz",
    ],
    path: "/test/baz/:zaz",
    regexp: /^\\/test\\/baz(?:\\/([^\\/#\\?]+?))[\\/#\\?]?\$/i,
  },
  {
    methods: [
      "HEAD",
      "GET",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [
      "zaz_zaz",
    ],
    path: "/test/dolor/:zaz_zaz",
    regexp: /^\\/test\\/dolor(?:\\/([^\\/#\\?]+?))[\\/#\\?]?\$/i,
  },
  {
    methods: [
      "PUT",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [
      "someId",
    ],
    path: "/test/taz/:someId",
    regexp: /^\\/test\\/taz(?:\\/([^\\/#\\?]+?))[\\/#\\?]?\$/i,
  },
  {
    methods: [
      "DELETE",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [],
    path: "/test/raz/",
    regexp: /^\\/test\\/raz\\/[\\/#\\?]?\$/i,
  },
  {
    methods: [
      "PATCH",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [
      "whatever",
    ],
    path: "/test/yaz/:whatever",
    regexp: /^\\/test\\/yaz(?:\\/([^\\/#\\?]+?))[\\/#\\?]?\$/i,
  },
  {
    methods: [
      "OPTIONS",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [],
    path: "/test/bul",
    regexp: /^\\/test\\/bul[\\/#\\?]?\$/i,
  },
  {
    methods: [
      "HEAD",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [],
    path: "/test/phil",
    regexp: /^\\/test\\/phil[\\/#\\?]?\$/i,
  },
  {
    methods: [
      "POST",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [],
    path: "/test/uah",
    regexp: /^\\/test\\/uah[\\/#\\?]?\$/i,
  },
  {
    methods: [
      "HEAD",
      "GET",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [],
    path: "/test/zodError",
    regexp: /^\\/test\\/zodError[\\/#\\?]?\$/i,
  },
  {
    methods: [
      "POST",
    ],
    middleware: [
      [AsyncFunction (anonymous)],
    ],
    options: {
      end: undefined,
      ignoreCaptures: undefined,
      sensitive: undefined,
      strict: undefined,
    },
    paramNames: [],
    path: "/test/arbitraryError",
    regexp: /^\\/test\\/arbitraryError[\\/#\\?]?\$/i,
  },
]
`;
